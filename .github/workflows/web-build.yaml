name: Web Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-web:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build libsdl2-dev libsdl2-image-dev
    
    - name: Setup Emscripten
      uses: mymindstorm/setup-emsdk@v11
      with:
        version: 'latest'
        no-cache: true
    
    - name: Verify Emscripten installation
      run: |
        emcc --version
        em++ --version
    
    - name: Create build directory
      run: mkdir -p build_web
    
    - name: Configure CMake
      working-directory: ./build_web
      run: |
        cat ../CMakeLists.txt
        
        emcmake cmake .. -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_FLAGS="-s USE_SDL=2 -s USE_SDL_IMAGE=2 -s USE_SDL_TTF=2 -w" \
          -DCMAKE_CXX_FLAGS="-s USE_SDL=2 -s USE_SDL_IMAGE=2 -s USE_SDL_TTF=2 -w" \
          -DCMAKE_EXE_LINKER_FLAGS="-s USE_SDL=2 -s USE_SDL_IMAGE=2 -s USE_SDL_TTF=2 -s SDL2_IMAGE_FORMATS='[\"png\"]' -s ALLOW_MEMORY_GROWTH=1 -s WASM=1 -s EXPORTED_RUNTIME_METHODS='[\"ccall\",\"cwrap\"]'"
    
    - name: Build
      working-directory: ./build_web
      run: cmake --build .
    
    - name: List build directory
      run: |
        ls -la build_web/
    
    - name: Create web distribution directory
      run: mkdir -p web_dist
    
    - name: Copy build artifacts to distribution directory
      run: |
        find build_web -maxdepth 1 -type f -name "*.html" -exec cp {} web_dist/ \;
        find build_web -maxdepth 1 -type f -name "*.js" -exec cp {} web_dist/ \;
        find build_web -maxdepth 1 -type f -name "*.wasm" -exec cp {} web_dist/ \;
        find build_web -maxdepth 1 -type f -name "*.data" -exec cp {} web_dist/ \;
    
    - name: Create simple index.html
      run: |
        echo '<!DOCTYPE html>' > web_dist/index.html
        echo '<html>' >> web_dist/index.html
        echo '<head>' >> web_dist/index.html
        echo '  <meta charset="utf-8">' >> web_dist/index.html
        echo '  <meta name="viewport" content="width=device-width, initial-scale=1">' >> web_dist/index.html
        echo '  <title>C++ Roguelike</title>' >> web_dist/index.html
        echo '  <style>' >> web_dist/index.html
        echo '    body { margin: 0; background-color: #222; color: #eee; font-family: sans-serif; display: flex; flex-direction: column; align-items: center; justify-content: center; min-height: 100vh; }' >> web_dist/index.html
        echo '    canvas { border: 1px solid #444; display: block; margin: 0 auto; }' >> web_dist/index.html
        echo '    h1 { text-align: center; margin-bottom: 20px; }' >> web_dist/index.html
        echo '    #loading { text-align: center; margin-top: 20px; }' >> web_dist/index.html
        echo '  </style>' >> web_dist/index.html
        echo '</head>' >> web_dist/index.html
        echo '<body>' >> web_dist/index.html
        echo '  <h1>C++ Roguelike</h1>' >> web_dist/index.html
        
        # Look for HTML files other than index.html
        HTML_FILES=($(find web_dist -maxdepth 1 -type f -name "*.html" ! -name "index.html"))
        if [ ${#HTML_FILES[@]} -gt 0 ]; then
          # Create a redirect to the first HTML file
          GAME_HTML=$(basename "${HTML_FILES[0]}")
          echo "  <script>window.location.href = \"$GAME_HTML\";</script>" >> web_dist/index.html
        else
          echo "  <div style=\"color: #ff5555; max-width: 600px; text-align: center; padding: 20px;\">" >> web_dist/index.html
          echo "    <p>No web build files were generated. Please check the GitHub Actions logs for more information.</p>" >> web_dist/index.html
          echo "  </div>" >> web_dist/index.html
        fi
        
        echo '  <div id="loading">Loading...</div>' >> web_dist/index.html
        echo '</body>' >> web_dist/index.html
        echo '</html>' >> web_dist/index.html
    
    - name: Deploy to GitHub Pages
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: web_dist
        branch: gh-pages
        clean: true